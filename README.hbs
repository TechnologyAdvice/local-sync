Local Sync
==========

A friendly, tiny, synchronous, namespaced, and _dependency free_ local storage solution.

```
npm i @technologyadvice/local-sync -S
```

## Usage

[Bucket](#bucket)
[Set / Get](#set-/-get)
[Put](#put)
[Keys / Values / All](#keys-/-values-/-all)
[Remove / Clear](#remove-/-clear)

### Bucket

Methods operate only in the current bucket namespace.

```js
const ls = new LocalSync()
// => bucket is 'default'

const ls = new LocalSync('BikiniBottom')
// => bucket is 'BikiniBottom'
```

### Set / Get

Set / get any JSON serializable data type.

```js
ls.set('bob', {name: 'SpongeBob'})
// => {name: 'SpongeBob'}
ls.get('bob')
// => {name: 'SpongeBob'}

ls.set('quotes', ['Squidward!'])
// => ['Squidward!]
ls.get('quotes')
// => ['Squidward!]
```

### Put

Patch stored objects and arrays.

```js
ls.put('bob', {address: '124 Conch Street'})
// => {name: 'SpongeBob', address: '124 Conch Street'}

ls.put('quotes', ['Why so crabby, Patty?'])
// => ['Squidward!', 'Why so crabby, Patty?']
```

### Keys / Values / All

List stored keys, values, or key/value pairs as objects.

```js
ls.keys()
// => ['bob', 'quotes']

ls.values()
// [
//   {address: '124 Conch Street', name: 'SpongeBob'},
//   ['Squidward!', 'Why so crabby, Patty?']
// ]

ls.all()
// [
//   {address: '124 Conch Street', name: 'SpongeBob'},
//   {quotes: ['Squidward!', 'Why so crabby, Patty?']}
// ]
```

### Remove / Clear

Remove a single value by key or clear all values.

```js
ls.remove('bob')
ls.all()
// => [{quotes: ['Squidward!']}]

ls.clear()
ls.all()
// => []
```

<a name="LocalSync"></a>
## API
{{#class name="LocalSync"~}}
  {{>member-index~}}
  {{>members~}}
{{/class}}

***

&copy; 2015 TechnologyAdvice. API Docs by [jsdoc-to-markdown](https://github.com/75lb/jsdoc-to-markdown).
